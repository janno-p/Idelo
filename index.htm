<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>iDELO Virtuaaltoimik</title>

    <!-- Bootstrap -->
    <link href="css/bootstrap.min.css" rel="stylesheet" />

    <link href="css/idelo.css" rel="stylesheet" />

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="js/html5shiv.js"></script>
      <script src="js/respond.min.js"></script>
    <![endif]-->
  </head>
  <body>
    <div id="container" class="container">
      <hr />

      <footer>
        <p>&copy; iDELO 2014</p>
      </footer>
    </div>

    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="js/jquery-1.11.0.min.js"></script>
    <script src="js/jquery.cookie.js"></script>
    <script src="js/jquery.validate.min.js"></script>

    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="js/bootstrap.min.js"></script>
    <script src="js/docs.min.js"></script>

    <script type="text/javascript">

      var templateName = null;

      function getParameter(name) {
        var query = window.location.search.substring(1);
        var variables = query.split('&');
        for (var i = 0; i < variables.length; i++) {
          var variableName = variables[i].split('=');
          if (variableName[0] == name) {
            return variableName[1];
          }
        }
        return null;
      }

      function getConfiguration() {
        switch (getParameter('page')) {
          case 'register': return { template: 'register', scripts: [ 'login', 'register' ] };
          case 'register-success': return { template: 'register-success', scripts: [ 'login', 'index' ] };
          default: return { template: 'index', scripts: [ 'login', 'index' ] };
        }
      }

      $(document).ready(function() {
        function createFunc(name, fun) {
          return function() {
            console.log(name);
            $.getScript('js/idelo/' + name + '.js', fun)
          };
        }

        var conf = getConfiguration();
        templateName = 'partial/' + conf.template + '.htm';
        var fun = [];
        for (var i = conf.scripts.length - 1; i >= 0; i--) {
          fun[i] = createFunc(conf.scripts[i], fun[i + 1]);
        }
        fun[0]();
      });

    </script>
  </body>
</html>
